Given an array of integers nums sorted in ascending order, find the starting and ending position of a given target value.

If target is not found in the array, return [-1, -1].

You must write an algorithm with O(log n) runtime complexity.

 

Example 1:

Input: nums = [5,7,7,8,8,10], target = 8
Output: [3,4]
Example 2:

Input: nums = [5,7,7,8,8,10], target = 6
Output: [-1,-1]
--------------------------------------------------------
class Solution:
    def searchRange(self, nums: List[int], target: int) -> List[int]:

        s=0
        e=len(nums)-1
        n=e
        lo=-1
        while s<=e:
            mid=(s+e)//2
            if nums[mid]==target:
                lo=mid
                e=mid-1
            elif nums[mid]>target:
                e=mid-1
            else:
                s=mid+1
        s=0
        e=n
        up=-1
        while s<=e:
            mid=(s+e)//2
            if nums[mid]==target:
                up=mid
                s=mid+1
            elif nums[mid]>target:
                e=mid-1
            else:
                s=mid+1
        return [lo,up]# your code goes here
